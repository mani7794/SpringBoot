package com.serole.poc.emp.controller

import com.github.tomakehurst.wiremock.WireMockServer;
import org.junit.Test
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;
 
import static com.github.tomakehurst.wiremock.client.WireMock.*;
import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;
import static org.assertj.core.api.Assertions.assertThat;
import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;
 
class EmployeeControllertest1 {
 
	private RestTemplate restTemplate;
	private WireMockServer wireMockServer;
	WireMockServer wireMockServer = new WireMockServer(options().dynamicPort());

	@Test
	void shouldCompareActualRequestBodyWithExpectedRequestBody() {
		givenThat(post(urlEqualTo("/emp/addEmp"))
			.withRequestBody(equalToJson("{ \"firstName\": \"Mani\", \"middleName\": \"s\", \"surName\": \"Mettu\", \"dateOfBirth\": \"14-08-1997\", \"gender\": \"Male\", \"email\": \"manik@gmail.com\", \"jobRole\": \"Software Trainee\", \"joinDate\": \"01-07-2019\", \"bloodGroup\": \"o-ve\" }"
			))
			.willReturn(aResponse().withStatus(200))
		);
		
	
	
		
		String apiMethodUrl = buildApiMethodUrl();
		HttpEntity<String> httpRequest = new HttpEntity<>(
				"{ \"firstName\": \"M\", \"middleName\": \"\", \"surName\": \"M\", \"dateOfBirth\": \"14-08-1997\", \"gender\": \"Male\", \"email\": \"manik@gmail.com\", \"jobRole\": \"Software Trainee\", \"joinDate\": \"01-07-2019\", \"bloodGroup\": \"o-ve\" }"
			
		);
 
		ResponseEntity<String> response = restTemplate.exchange(apiMethodUrl,
				HttpMethod.POST,
				httpRequest,
				String.class
		);
		assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);
	}
 
	private String buildApiMethodUrl() {
		return String.format("http://localhost:%d/emp/addEmp",
				this.wireMockServer.port()
		);
	}
}



